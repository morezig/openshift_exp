kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    description: The SonarQube template
    tags: instant-app,sonarqube
  name: sonarqube
labels:
  application: sonarqube
message: "Login to SonarQube with the default admin user: admin/admin"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: sonarqube
    labels:
      app: sonarqube
  spec:
    ports:
    - name: sonarqube
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for SonarQube's http service.
    name: sonarqube
    labels:
      app: sonarqube
  spec:
    to:
      kind: Service
      name: sonarqube
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sonarqube
      deploymentconfig: sonarqube
    name: sonarqube
  spec:
    replicas: 1
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
        creationTimestamp: null
        labels:
          app: sonarqube
          deploymentconfig: sonarqube
      spec:
        containers:
        - image: "${SONARQUBE_IMAGE}:${SONARQUBE_VERSION}"
          imagePullPolicy: Always
          name: sonarqube
          ports:
          - containerPort: 9001
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9001
              path: /
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9001
              path: /
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 1
              memory: ${SONAR_MAX_MEMORY}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sonarqube-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${SONAR_VOLUME_CAPACITY}
parameters:
- name: SONARQUBE_IMAGE
  displayName: SONARQUBE Image
  description: The name and tag for the SONARQUBE Image to use
  value: "docker.io/cenoq/sonarqube"
  required: true
- name: SONARQUBE_VERSION
  displayName: SonarQube version
  description: The tag for the SONARQUBE Image to use
  value: "latest"
  required: true
- description: Volume space available for SonarQube
  displayName: SonarQube Volume Capacity
  name: SONAR_VOLUME_CAPACITY
  required: true
  value: 1Gi
- displayName: SonarQube Max Memory
  name: SONAR_MAX_MEMORY
  required: true
  value: 2Gi