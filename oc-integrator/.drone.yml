workspace:
  base: /root/go
  path: src/zodi

pipeline:
  build_linux_x64:
    image: cenoq/bbin:init
    environment:
      - GOROOT=/usr/local/go
      - GOPATH=/root/go
    commands:
      - export PATH=$PATH:/usr/local/go/bin:/root/go/bin
      - cd ui/backend
      - npm install
      - npm run build
      - cd ../../api/core
      - go get -u github.com/kardianos/govendor 
      - go get -u github.com/jteeuwen/go-bindata/... 
      - go get -u github.com/elazarl/go-bindata-assetfs/... 
      - govendor list
      - govendor fetch +m
      - go-bindata-assetfs -pkg common -o common/bindata.go assets/...
      - go build -tags=jsoniter -o app

  docker_image:
    image: plugins/docker
    repo: cenoq/bbin
    secrets: [ docker_username, docker_password ]
    dockerfile: Dockerfile
    auto_tag: true
    when:
      event: [ push, tag ]

  # telegram:
  #   imgae: applyboy/drone-telegram
  #   secrets: [ telegram_token, telegram_to ]
  #   token: ${TELEGRAM_TOKEN}
  #   to: ${TELEGRAM_TO}
  #   message: >
  #     {{#success build.status}}
  #       build {{build.number}} succeeded. Good job.
  #     {{else}}
  #       build {{build.number}} failed. Fix me please.
  #     {{/success}}

  deploy:
    image: sh4d1/drone-kubernetes
    kubernetes_template: deployment.yml
    kubernetes_namespace: default
    secrets: [ kubernetes_server, kubernetes_cert, kubernetes_token ]
    when:
      event: [ tag ]